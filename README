Revizní skripty
===============

Postup při revizi:
******************

Soubory s čárovými kódy:
------------------------

1. Vytvoří se adresář pro každou kontrolovanou signaturu nebo sbírku
2. Soubory s načtenými čárovými kódy se umístí do podadresářů
3. Porovnají se soubory KOPIE1 a KOPIE2 s ORIGINAL pomocí diff
4. Zdrojové soubory se sloučí do jednoho souboru pomocí 

   cat pc1/ORIGINAL > slouceny.txt
   cat pc2/ORIGINAL >> slouceny.txt

5. Překonvertovat je to utf-8 
   (nutné jen v případě, že 2. signatury obsahují diakritiku)

   iconv -f cp852 -t utf-8 slouceny.txt > revize-jmenosig.txt

6. Vytvořit soubor pro aleph 'revize.xml'
   Zkopíruje se sloučený sroubor, odstraní se 2. signatury pomocí 
   regulárních výrazů, přidají se tagy <revize> na začátek a konec souboru
7. Provede se revize v Alephu, není třeba dávat tisk, budeme používat 
   výsledné xml

Nastavení revize v Alephu
-------------------------


1) Vytvořil jsem si soubor revize.xml
    Struktura:
      <revize>
      2592141928
      </revize>
2) Tento soubor překopíruju do adresáře:
    C:\AL500\Revize\
3) V Alephu vybreru z nabídky:
    Služby > Revize > (ret-adm-01a) - Obecný formulář - revize do 10 000 jednotek
    Výstupní soubor: pedf_revize_studovna
    Dílčí knihovna: PEDFR
    Sbírka: KRST8
    (Signatura: F)
    Formát zprávy: "Revize dokumentů - tisk všech záznamů"
    Řadit podle "Signatury"

xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

Aleph (kódy)
============
Dílčí knihovna:
	PEDFR (Rettigova)
	PEDFM (KVP)
	PEDFC (Celetná)
Sbírka:
	KRK6 (Rett-knihovna)
	KRST8 (Rett-studovna)
	KRD5 (Rett-depozitář)
	KRD6 (Rett-depozitář 1)
	KRS7 (Rett-sklad)
	KRA4 (Rett-archiv)
	KMK2 (Knihovna-CES)
	KMK3 (Knihovna-KVP)
	KMK4 (Knihovna CŠM)
	KVPD (Knihovna CDS)
	KCS1 (Celetná-studovna AJL)
Status jednotky:
	01 (Prezenčně)
	02 (Nelze půjčit)
	03 (Grantová výp.)
	04 (Běžná v.I)
	05 (Běžná v.II)
	06 (Běžná v.III)
	07 (Krátkodobá výp.)
	09 (Specifická výp.)

XML soubor
----------

Má pevnou strukturu, na každém řádku je jeden element, s tím, že pořadí je pevně
dané. Pokud by se změnila, je třeba skript upravit!

Umístí se do adresáře k načteným kódům.

Konfigurační soubor
-------------------

Do adresáře umístit soubor config.lua v podobě:

config = {
    chyby = "chyby.csv",
    kody  = "revize-dt.txt",
    prefix = "Dt",
    xml = "pedf_revize_dt",
    lokace = "Rett-knihovna"
}

chyby  - výsledky revizního skriptu 'processxml.lua'
kody   - načtené čárové kódy
prefix - počáteční písmena u signatur
xml    - zpracovávaný xml soubor
lokace - zpracovávaná lokace. Pokud se zpracovává víc lokací (revize signatury F...), může se použít pole

Zpracování xml
--------------

  ./processxml.lua adresar/ > adresar/chyby.csv

Vytvoří soubor chyby.csv ve zpracovávaném adresáři. Jednotlivé položky jsou 
oddělené tabulátorem.

Je tam záznam pro každou jednotku z revizního xml souboru, s nalezenými chybami

Revizní výstupy
---------------

Revizní výstupy zpracovává hlavní skript 'revparser.lua'

   ./revparser [parametry] příkaz adresář

Parametry se liší pro jednotlivé příkazy, většina žádné nemá. Existuje jeden 
univerzální parametr:

  -t - výstup bude v LaTeXu

Příkazy:

   navic     - najde záznamy načtené při revizi, které nejsou v xml souboru z 
               alephu většinou jsou to špatné kódy nebo jednotky z jiných 
               lokací nebo signatur. Vypíše i jednotky okolo, aby šly líp 
               hledat.
   dupl      - víckrát načtené čárové kódy
   chyby     - chyby z xml souboru - hlavně nenačtené kódy
   signatury - signatury které nebyly načtené v řadě - můžou být špatně 
               založené. Parametr -p se může použít pokud byly načítaní 
               obráceně. Metoda hledání není přesná, je třeba kontrola v 
               souboru načtených čk.
               Je možné zadat pozice od kud kam se má jaká metoda použít:
               ./revparser.lua -p signatury 1 1330  - byly načítané obráceně
               ./revparser.lua signatury 1330 2440  - správně načtené
   kody      - vytiskne seznam jednotek seřazených podle toho, jak byly načtené
               jejich čárové kódy. Užitečné pro kontroly a dohledávky
   sig2      - pro studovnu, vytiskne špatně zařazené 2. signatury  
   
